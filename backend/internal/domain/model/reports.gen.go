// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameReport = "reports"

// Report mapped from table <reports>
type Report struct {
	ID             string         `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:通報の一意識別子（UUIDv4）" json:"id"`                                                                                  // 通報の一意識別子（UUIDv4）
	ReporterUserID string         `gorm:"column:reporter_user_id;type:uuid;not null;index:idx_reports_reporter_user_id,priority:1;comment:通報したユーザーのID" json:"reporter_user_id"`                                         // 通報したユーザーのID
	ReportedUserID string         `gorm:"column:reported_user_id;type:uuid;not null;index:idx_reports_reported_user_id,priority:1;comment:通報されたユーザーのID" json:"reported_user_id"`                                        // 通報されたユーザーのID
	Reason         string         `gorm:"column:reason;type:character varying(255);not null;comment:通報理由" json:"reason"`                                                                                                // 通報理由
	Details        *string        `gorm:"column:details;type:text;comment:通報の詳細説明" json:"details"`                                                                                                                      // 通報の詳細説明
	Status         string         `gorm:"column:status;type:character varying(50);not null;index:idx_reports_status,priority:1;default:pending;comment:通報のステータス（pending, reviewing, resolved, rejected）" json:"status"` // 通報のステータス（pending, reviewing, resolved, rejected）
	TargetType     string         `gorm:"column:target_type;type:character varying(50);not null;index:idx_reports_target_type_target_id,priority:2;comment:通報対象のタイプ（user, tweet, community, etc.）" json:"target_type"`  // 通報対象のタイプ（user, tweet, community, etc.）
	TargetID       string         `gorm:"column:target_id;type:uuid;not null;index:idx_reports_target_type_target_id,priority:1;comment:通報対象のID" json:"target_id"`                                                      // 通報対象のID
	CreatedAt      time.Time      `gorm:"column:created_at;type:timestamp with time zone;not null;index:idx_reports_created_at,priority:1;default:CURRENT_TIMESTAMP;comment:通報作成日時" json:"created_at"`                  // 通報作成日時
	UpdatedAt      time.Time      `gorm:"column:updated_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:レコード更新日時" json:"updated_at"`                                                        // レコード更新日時
	DeletedAt      gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone;index:idx_reports_deleted_at,priority:1;comment:論理削除日時（NULLは有効なレコードを示す）" json:"deleted_at"`                                    // 論理削除日時（NULLは有効なレコードを示す）
	User           User           `json:"user"`
	ReportedUser   User           `gorm:"foreignKey:ReportedUserID" json:"reported_user"`
}

// TableName Report's table name
func (*Report) TableName() string {
	return TableNameReport
}

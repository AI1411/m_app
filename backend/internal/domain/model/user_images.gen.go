// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameUserImage = "user_images"

// UserImage mapped from table <user_images>
type UserImage struct {
	ID          string         `gorm:"column:id;type:uuid;primaryKey;default:gen_random_uuid();comment:画像の一意識別子（UUIDv4）" json:"id"`                                                                       // 画像の一意識別子（UUIDv4）
	UserID      string         `gorm:"column:user_id;type:uuid;not null;index:idx_user_images_user_id,priority:1;comment:画像の所有者であるユーザーのID" json:"user_id"`                                                // 画像の所有者であるユーザーのID
	ImageURL    string         `gorm:"column:image_url;type:character varying(255);not null;comment:画像のURL" json:"image_url"`                                                                             // 画像のURL
	Description *string        `gorm:"column:description;type:text;comment:画像の説明" json:"description"`                                                                                                     // 画像の説明
	IsPrimary   bool           `gorm:"column:is_primary;type:boolean;not null;index:idx_user_images_is_primary,priority:1;comment:プロフィールのメイン画像かどうか（trueの場合はメイン画像）" json:"is_primary"`                     // プロフィールのメイン画像かどうか（trueの場合はメイン画像）
	CreatedAt   time.Time      `gorm:"column:created_at;type:timestamp with time zone;not null;index:idx_user_images_created_at,priority:1;default:CURRENT_TIMESTAMP;comment:レコード作成日時" json:"created_at"` // レコード作成日時
	UpdatedAt   time.Time      `gorm:"column:updated_at;type:timestamp with time zone;not null;default:CURRENT_TIMESTAMP;comment:レコード更新日時" json:"updated_at"`                                             // レコード更新日時
	DeletedAt   gorm.DeletedAt `gorm:"column:deleted_at;type:timestamp with time zone;index:idx_user_images_deleted_at,priority:1;comment:論理削除日時（NULLは有効なレコードを示す）" json:"deleted_at"`                     // 論理削除日時（NULLは有効なレコードを示す）
	User        User           `json:"user"`
}

// TableName UserImage's table name
func (*UserImage) TableName() string {
	return TableNameUserImage
}

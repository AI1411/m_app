// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: notification/v1/notification.proto

package notificationv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通知情報
type Notification struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserId              string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                // 通知の受信者ID
	Title               string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                                                // 通知タイトル
	Content             string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                                                            // 通知内容
	NotificationType    string                 `protobuf:"bytes,5,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`                  // 通知タイプ（system, like, follow, etc.）
	RelatedResourceId   *string                `protobuf:"bytes,6,opt,name=related_resource_id,json=relatedResourceId,proto3,oneof" json:"related_resource_id,omitempty"`       // 関連リソースID（ツイートID、ユーザーIDなど）
	RelatedResourceType *string                `protobuf:"bytes,7,opt,name=related_resource_type,json=relatedResourceType,proto3,oneof" json:"related_resource_type,omitempty"` // 関連リソースタイプ（tweet, user, etc.）
	IsRead              bool                   `protobuf:"varint,8,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`                                               // 既読フラグ
	CreatedAt           *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt           *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Notification) Reset() {
	*x = Notification{}
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{0}
}

func (x *Notification) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Notification) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Notification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Notification) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Notification) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *Notification) GetRelatedResourceId() string {
	if x != nil && x.RelatedResourceId != nil {
		return *x.RelatedResourceId
	}
	return ""
}

func (x *Notification) GetRelatedResourceType() string {
	if x != nil && x.RelatedResourceType != nil {
		return *x.RelatedResourceType
	}
	return ""
}

func (x *Notification) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *Notification) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Notification) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

// 通知リスト取得リクエスト
type GetNotificationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 通知を取得するユーザーID
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UnreadOnly    *bool                  `protobuf:"varint,4,opt,name=unread_only,json=unreadOnly,proto3,oneof" json:"unread_only,omitempty"` // trueの場合、未読の通知のみを取得
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsRequest) Reset() {
	*x = GetNotificationsRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsRequest) ProtoMessage() {}

func (x *GetNotificationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsRequest.ProtoReflect.Descriptor instead.
func (*GetNotificationsRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{1}
}

func (x *GetNotificationsRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *GetNotificationsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNotificationsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNotificationsRequest) GetUnreadOnly() bool {
	if x != nil && x.UnreadOnly != nil {
		return *x.UnreadOnly
	}
	return false
}

// 通知リスト取得レスポンス
type GetNotificationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notifications []*Notification        `protobuf:"bytes,1,rep,name=notifications,proto3" json:"notifications,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	UnreadCount   int32                  `protobuf:"varint,5,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"` // 未読通知の総数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNotificationsResponse) Reset() {
	*x = GetNotificationsResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNotificationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNotificationsResponse) ProtoMessage() {}

func (x *GetNotificationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNotificationsResponse.ProtoReflect.Descriptor instead.
func (*GetNotificationsResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{2}
}

func (x *GetNotificationsResponse) GetNotifications() []*Notification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

func (x *GetNotificationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *GetNotificationsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNotificationsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNotificationsResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// 通知既読設定リクエスト
type MarkNotificationAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 認証・認可のため
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkNotificationAsReadRequest) Reset() {
	*x = MarkNotificationAsReadRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadRequest) ProtoMessage() {}

func (x *MarkNotificationAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkNotificationAsReadRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *MarkNotificationAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 通知既読設定レスポンス
type MarkNotificationAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkNotificationAsReadResponse) Reset() {
	*x = MarkNotificationAsReadResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkNotificationAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkNotificationAsReadResponse) ProtoMessage() {}

func (x *MarkNotificationAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkNotificationAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkNotificationAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkNotificationAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 全通知既読設定リクエスト
type MarkAllNotificationsAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 認証・認可のため
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsAsReadRequest) Reset() {
	*x = MarkAllNotificationsAsReadRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsAsReadRequest) ProtoMessage() {}

func (x *MarkAllNotificationsAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAllNotificationsAsReadRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 全通知既読設定レスポンス
type MarkAllNotificationsAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UpdatedCount  int32                  `protobuf:"varint,1,opt,name=updated_count,json=updatedCount,proto3" json:"updated_count,omitempty"` // 更新された通知の数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllNotificationsAsReadResponse) Reset() {
	*x = MarkAllNotificationsAsReadResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllNotificationsAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllNotificationsAsReadResponse) ProtoMessage() {}

func (x *MarkAllNotificationsAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllNotificationsAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllNotificationsAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{6}
}

func (x *MarkAllNotificationsAsReadResponse) GetUpdatedCount() int32 {
	if x != nil {
		return x.UpdatedCount
	}
	return 0
}

// 通知作成リクエスト（システム管理者用）
type CreateNotificationRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	UserId              string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                // 通知の受信者ID
	Title               string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                                                // 通知タイトル
	Content             string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                                                            // 通知内容
	NotificationType    string                 `protobuf:"bytes,4,opt,name=notification_type,json=notificationType,proto3" json:"notification_type,omitempty"`                  // 通知タイプ
	RelatedResourceId   *string                `protobuf:"bytes,5,opt,name=related_resource_id,json=relatedResourceId,proto3,oneof" json:"related_resource_id,omitempty"`       // 関連リソースID
	RelatedResourceType *string                `protobuf:"bytes,6,opt,name=related_resource_type,json=relatedResourceType,proto3,oneof" json:"related_resource_type,omitempty"` // 関連リソースタイプ
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *CreateNotificationRequest) Reset() {
	*x = CreateNotificationRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationRequest) ProtoMessage() {}

func (x *CreateNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationRequest.ProtoReflect.Descriptor instead.
func (*CreateNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateNotificationRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateNotificationRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateNotificationRequest) GetNotificationType() string {
	if x != nil {
		return x.NotificationType
	}
	return ""
}

func (x *CreateNotificationRequest) GetRelatedResourceId() string {
	if x != nil && x.RelatedResourceId != nil {
		return *x.RelatedResourceId
	}
	return ""
}

func (x *CreateNotificationRequest) GetRelatedResourceType() string {
	if x != nil && x.RelatedResourceType != nil {
		return *x.RelatedResourceType
	}
	return ""
}

// 通知作成レスポンス
type CreateNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 作成された通知のID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNotificationResponse) Reset() {
	*x = CreateNotificationResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNotificationResponse) ProtoMessage() {}

func (x *CreateNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNotificationResponse.ProtoReflect.Descriptor instead.
func (*CreateNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{8}
}

func (x *CreateNotificationResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 通知削除リクエスト
type DeleteNotificationRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId string                 `protobuf:"bytes,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         string                 `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 認証・認可のため
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteNotificationRequest) Reset() {
	*x = DeleteNotificationRequest{}
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationRequest) ProtoMessage() {}

func (x *DeleteNotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationRequest.ProtoReflect.Descriptor instead.
func (*DeleteNotificationRequest) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{9}
}

func (x *DeleteNotificationRequest) GetNotificationId() string {
	if x != nil {
		return x.NotificationId
	}
	return ""
}

func (x *DeleteNotificationRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

// 通知削除レスポンス
type DeleteNotificationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteNotificationResponse) Reset() {
	*x = DeleteNotificationResponse{}
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNotificationResponse) ProtoMessage() {}

func (x *DeleteNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_v1_notification_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNotificationResponse.ProtoReflect.Descriptor instead.
func (*DeleteNotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_v1_notification_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteNotificationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_notification_v1_notification_proto protoreflect.FileDescriptor

const file_notification_v1_notification_proto_rawDesc = "" +
	"\n" +
	"\"notification/v1/notification.proto\x12\x0fnotification.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xc3\x03\n" +
	"\fNotification\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12+\n" +
	"\x11notification_type\x18\x05 \x01(\tR\x10notificationType\x123\n" +
	"\x13related_resource_id\x18\x06 \x01(\tH\x00R\x11relatedResourceId\x88\x01\x01\x127\n" +
	"\x15related_resource_type\x18\a \x01(\tH\x01R\x13relatedResourceType\x88\x01\x01\x12\x17\n" +
	"\ais_read\x18\b \x01(\bR\x06isRead\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\x16\n" +
	"\x14_related_resource_idB\x18\n" +
	"\x16_related_resource_type\"\x99\x01\n" +
	"\x17GetNotificationsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12$\n" +
	"\vunread_only\x18\x04 \x01(\bH\x00R\n" +
	"unreadOnly\x88\x01\x01B\x0e\n" +
	"\f_unread_only\"\xd4\x01\n" +
	"\x18GetNotificationsResponse\x12C\n" +
	"\rnotifications\x18\x01 \x03(\v2\x1d.notification.v1.NotificationR\rnotifications\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\x12!\n" +
	"\funread_count\x18\x05 \x01(\x05R\vunreadCount\"a\n" +
	"\x1dMarkNotificationAsReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\":\n" +
	"\x1eMarkNotificationAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"<\n" +
	"!MarkAllNotificationsAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"I\n" +
	"\"MarkAllNotificationsAsReadResponse\x12#\n" +
	"\rupdated_count\x18\x01 \x01(\x05R\fupdatedCount\"\xb1\x02\n" +
	"\x19CreateNotificationRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12+\n" +
	"\x11notification_type\x18\x04 \x01(\tR\x10notificationType\x123\n" +
	"\x13related_resource_id\x18\x05 \x01(\tH\x00R\x11relatedResourceId\x88\x01\x01\x127\n" +
	"\x15related_resource_type\x18\x06 \x01(\tH\x01R\x13relatedResourceType\x88\x01\x01B\x16\n" +
	"\x14_related_resource_idB\x18\n" +
	"\x16_related_resource_type\",\n" +
	"\x1aCreateNotificationResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"]\n" +
	"\x19DeleteNotificationRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\tR\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\tR\x06userId\"6\n" +
	"\x1aDeleteNotificationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xe9\x04\n" +
	"\x13NotificationService\x12i\n" +
	"\x10GetNotifications\x12(.notification.v1.GetNotificationsRequest\x1a).notification.v1.GetNotificationsResponse\"\x00\x12{\n" +
	"\x16MarkNotificationAsRead\x12..notification.v1.MarkNotificationAsReadRequest\x1a/.notification.v1.MarkNotificationAsReadResponse\"\x00\x12\x87\x01\n" +
	"\x1aMarkAllNotificationsAsRead\x122.notification.v1.MarkAllNotificationsAsReadRequest\x1a3.notification.v1.MarkAllNotificationsAsReadResponse\"\x00\x12o\n" +
	"\x12CreateNotification\x12*.notification.v1.CreateNotificationRequest\x1a+.notification.v1.CreateNotificationResponse\"\x00\x12o\n" +
	"\x12DeleteNotification\x12*.notification.v1.DeleteNotificationRequest\x1a+.notification.v1.DeleteNotificationResponse\"\x00B\xc1\x01\n" +
	"\x13com.notification.v1B\x11NotificationProtoP\x01Z:github.com/AI1411/m_app/gen/notification/v1;notificationv1\xa2\x02\x03NXX\xaa\x02\x0fNotification.V1\xca\x02\x0fNotification\\V1\xe2\x02\x1bNotification\\V1\\GPBMetadata\xea\x02\x10Notification::V1b\x06proto3"

var (
	file_notification_v1_notification_proto_rawDescOnce sync.Once
	file_notification_v1_notification_proto_rawDescData []byte
)

func file_notification_v1_notification_proto_rawDescGZIP() []byte {
	file_notification_v1_notification_proto_rawDescOnce.Do(func() {
		file_notification_v1_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)))
	})
	return file_notification_v1_notification_proto_rawDescData
}

var file_notification_v1_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_notification_v1_notification_proto_goTypes = []any{
	(*Notification)(nil),                       // 0: notification.v1.Notification
	(*GetNotificationsRequest)(nil),            // 1: notification.v1.GetNotificationsRequest
	(*GetNotificationsResponse)(nil),           // 2: notification.v1.GetNotificationsResponse
	(*MarkNotificationAsReadRequest)(nil),      // 3: notification.v1.MarkNotificationAsReadRequest
	(*MarkNotificationAsReadResponse)(nil),     // 4: notification.v1.MarkNotificationAsReadResponse
	(*MarkAllNotificationsAsReadRequest)(nil),  // 5: notification.v1.MarkAllNotificationsAsReadRequest
	(*MarkAllNotificationsAsReadResponse)(nil), // 6: notification.v1.MarkAllNotificationsAsReadResponse
	(*CreateNotificationRequest)(nil),          // 7: notification.v1.CreateNotificationRequest
	(*CreateNotificationResponse)(nil),         // 8: notification.v1.CreateNotificationResponse
	(*DeleteNotificationRequest)(nil),          // 9: notification.v1.DeleteNotificationRequest
	(*DeleteNotificationResponse)(nil),         // 10: notification.v1.DeleteNotificationResponse
	(*timestamppb.Timestamp)(nil),              // 11: google.protobuf.Timestamp
}
var file_notification_v1_notification_proto_depIdxs = []int32{
	11, // 0: notification.v1.Notification.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: notification.v1.Notification.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: notification.v1.GetNotificationsResponse.notifications:type_name -> notification.v1.Notification
	1,  // 3: notification.v1.NotificationService.GetNotifications:input_type -> notification.v1.GetNotificationsRequest
	3,  // 4: notification.v1.NotificationService.MarkNotificationAsRead:input_type -> notification.v1.MarkNotificationAsReadRequest
	5,  // 5: notification.v1.NotificationService.MarkAllNotificationsAsRead:input_type -> notification.v1.MarkAllNotificationsAsReadRequest
	7,  // 6: notification.v1.NotificationService.CreateNotification:input_type -> notification.v1.CreateNotificationRequest
	9,  // 7: notification.v1.NotificationService.DeleteNotification:input_type -> notification.v1.DeleteNotificationRequest
	2,  // 8: notification.v1.NotificationService.GetNotifications:output_type -> notification.v1.GetNotificationsResponse
	4,  // 9: notification.v1.NotificationService.MarkNotificationAsRead:output_type -> notification.v1.MarkNotificationAsReadResponse
	6,  // 10: notification.v1.NotificationService.MarkAllNotificationsAsRead:output_type -> notification.v1.MarkAllNotificationsAsReadResponse
	8,  // 11: notification.v1.NotificationService.CreateNotification:output_type -> notification.v1.CreateNotificationResponse
	10, // 12: notification.v1.NotificationService.DeleteNotification:output_type -> notification.v1.DeleteNotificationResponse
	8,  // [8:13] is the sub-list for method output_type
	3,  // [3:8] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_notification_v1_notification_proto_init() }
func file_notification_v1_notification_proto_init() {
	if File_notification_v1_notification_proto != nil {
		return
	}
	file_notification_v1_notification_proto_msgTypes[0].OneofWrappers = []any{}
	file_notification_v1_notification_proto_msgTypes[1].OneofWrappers = []any{}
	file_notification_v1_notification_proto_msgTypes[7].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_v1_notification_proto_rawDesc), len(file_notification_v1_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_v1_notification_proto_goTypes,
		DependencyIndexes: file_notification_v1_notification_proto_depIdxs,
		MessageInfos:      file_notification_v1_notification_proto_msgTypes,
	}.Build()
	File_notification_v1_notification_proto = out.File
	file_notification_v1_notification_proto_goTypes = nil
	file_notification_v1_notification_proto_depIdxs = nil
}

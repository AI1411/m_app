// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: report/v1/report.proto

package reportv1

import (
	v1 "github.com/AI1411/m_app/gen/user/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通報情報
type Report struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ReporterUserId string                 `protobuf:"bytes,2,opt,name=reporter_user_id,json=reporterUserId,proto3" json:"reporter_user_id,omitempty"` // 通報したユーザーID
	ReportedUserId string                 `protobuf:"bytes,3,opt,name=reported_user_id,json=reportedUserId,proto3" json:"reported_user_id,omitempty"` // 通報されたユーザーID
	Reason         string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`                                         // 通報理由
	Details        string                 `protobuf:"bytes,5,opt,name=details,proto3" json:"details,omitempty"`                                       // 詳細説明
	Status         string                 `protobuf:"bytes,6,opt,name=status,proto3" json:"status,omitempty"`                                         // 通報ステータス (pending, reviewing, resolved, rejected)
	TargetType     string                 `protobuf:"bytes,7,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`               // 通報対象のタイプ (user, tweet, community, etc.)
	TargetId       string                 `protobuf:"bytes,8,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`                     // 通報対象のID
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt      *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Reporter       *v1.User               `protobuf:"bytes,11,opt,name=reporter,proto3" json:"reporter,omitempty"` // 通報したユーザー情報
	Reported       *v1.User               `protobuf:"bytes,12,opt,name=reported,proto3" json:"reported,omitempty"` // 通報されたユーザー情報
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Report) Reset() {
	*x = Report{}
	mi := &file_report_v1_report_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Report) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Report) ProtoMessage() {}

func (x *Report) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Report.ProtoReflect.Descriptor instead.
func (*Report) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{0}
}

func (x *Report) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Report) GetReporterUserId() string {
	if x != nil {
		return x.ReporterUserId
	}
	return ""
}

func (x *Report) GetReportedUserId() string {
	if x != nil {
		return x.ReportedUserId
	}
	return ""
}

func (x *Report) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Report) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *Report) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Report) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *Report) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

func (x *Report) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Report) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Report) GetReporter() *v1.User {
	if x != nil {
		return x.Reporter
	}
	return nil
}

func (x *Report) GetReported() *v1.User {
	if x != nil {
		return x.Reported
	}
	return nil
}

// 通報作成リクエスト
type CreateReportRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReporterUserId string                 `protobuf:"bytes,1,opt,name=reporter_user_id,json=reporterUserId,proto3" json:"reporter_user_id,omitempty"` // 通報するユーザーID
	ReportedUserId string                 `protobuf:"bytes,2,opt,name=reported_user_id,json=reportedUserId,proto3" json:"reported_user_id,omitempty"` // 通報されるユーザーID
	Reason         string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`                                         // 通報理由
	Details        string                 `protobuf:"bytes,4,opt,name=details,proto3" json:"details,omitempty"`                                       // 詳細説明
	TargetType     string                 `protobuf:"bytes,5,opt,name=target_type,json=targetType,proto3" json:"target_type,omitempty"`               // 通報対象のタイプ (user, tweet, community, etc.)
	TargetId       string                 `protobuf:"bytes,6,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`                     // 通報対象のID
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateReportRequest) Reset() {
	*x = CreateReportRequest{}
	mi := &file_report_v1_report_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportRequest) ProtoMessage() {}

func (x *CreateReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportRequest.ProtoReflect.Descriptor instead.
func (*CreateReportRequest) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{1}
}

func (x *CreateReportRequest) GetReporterUserId() string {
	if x != nil {
		return x.ReporterUserId
	}
	return ""
}

func (x *CreateReportRequest) GetReportedUserId() string {
	if x != nil {
		return x.ReportedUserId
	}
	return ""
}

func (x *CreateReportRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateReportRequest) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *CreateReportRequest) GetTargetType() string {
	if x != nil {
		return x.TargetType
	}
	return ""
}

func (x *CreateReportRequest) GetTargetId() string {
	if x != nil {
		return x.TargetId
	}
	return ""
}

// 通報作成レスポンス
type CreateReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 作成された通報のID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateReportResponse) Reset() {
	*x = CreateReportResponse{}
	mi := &file_report_v1_report_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateReportResponse) ProtoMessage() {}

func (x *CreateReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateReportResponse.ProtoReflect.Descriptor instead.
func (*CreateReportResponse) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{2}
}

func (x *CreateReportResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 通報取得リクエスト
type GetReportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // 取得する通報のID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReportRequest) Reset() {
	*x = GetReportRequest{}
	mi := &file_report_v1_report_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportRequest) ProtoMessage() {}

func (x *GetReportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportRequest.ProtoReflect.Descriptor instead.
func (*GetReportRequest) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{3}
}

func (x *GetReportRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// 通報取得レスポンス
type GetReportResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Report        *Report                `protobuf:"bytes,1,opt,name=report,proto3" json:"report,omitempty"` // 取得した通報情報
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReportResponse) Reset() {
	*x = GetReportResponse{}
	mi := &file_report_v1_report_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReportResponse) ProtoMessage() {}

func (x *GetReportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReportResponse.ProtoReflect.Descriptor instead.
func (*GetReportResponse) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{4}
}

func (x *GetReportResponse) GetReport() *Report {
	if x != nil {
		return x.Report
	}
	return nil
}

// 通報一覧取得リクエスト
type ListReportsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ReporterUserId *string                `protobuf:"bytes,1,opt,name=reporter_user_id,json=reporterUserId,proto3,oneof" json:"reporter_user_id,omitempty"` // 特定の通報者のみの通報を取得する場合に指定
	ReportedUserId *string                `protobuf:"bytes,2,opt,name=reported_user_id,json=reportedUserId,proto3,oneof" json:"reported_user_id,omitempty"` // 特定の被通報者のみの通報を取得する場合に指定
	Status         *string                `protobuf:"bytes,3,opt,name=status,proto3,oneof" json:"status,omitempty"`                                         // 特定のステータスの通報のみを取得する場合に指定
	TargetType     *string                `protobuf:"bytes,4,opt,name=target_type,json=targetType,proto3,oneof" json:"target_type,omitempty"`               // 特定のターゲットタイプの通報のみを取得する場合に指定
	Page           int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize       int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ListReportsRequest) Reset() {
	*x = ListReportsRequest{}
	mi := &file_report_v1_report_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReportsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportsRequest) ProtoMessage() {}

func (x *ListReportsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportsRequest.ProtoReflect.Descriptor instead.
func (*ListReportsRequest) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{5}
}

func (x *ListReportsRequest) GetReporterUserId() string {
	if x != nil && x.ReporterUserId != nil {
		return *x.ReporterUserId
	}
	return ""
}

func (x *ListReportsRequest) GetReportedUserId() string {
	if x != nil && x.ReportedUserId != nil {
		return *x.ReportedUserId
	}
	return ""
}

func (x *ListReportsRequest) GetStatus() string {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ""
}

func (x *ListReportsRequest) GetTargetType() string {
	if x != nil && x.TargetType != nil {
		return *x.TargetType
	}
	return ""
}

func (x *ListReportsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReportsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 通報一覧取得レスポンス
type ListReportsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reports       []*Report              `protobuf:"bytes,1,rep,name=reports,proto3" json:"reports,omitempty"`                          // 通報のリスト
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"` // 総通報数
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                               // 現在のページ
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // ページサイズ
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListReportsResponse) Reset() {
	*x = ListReportsResponse{}
	mi := &file_report_v1_report_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListReportsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListReportsResponse) ProtoMessage() {}

func (x *ListReportsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListReportsResponse.ProtoReflect.Descriptor instead.
func (*ListReportsResponse) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{6}
}

func (x *ListReportsResponse) GetReports() []*Report {
	if x != nil {
		return x.Reports
	}
	return nil
}

func (x *ListReportsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *ListReportsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListReportsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 通報ステータス更新リクエスト
type UpdateReportStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`         // 更新する通報のID
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // 新しいステータス
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReportStatusRequest) Reset() {
	*x = UpdateReportStatusRequest{}
	mi := &file_report_v1_report_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReportStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportStatusRequest) ProtoMessage() {}

func (x *UpdateReportStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportStatusRequest.ProtoReflect.Descriptor instead.
func (*UpdateReportStatusRequest) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateReportStatusRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateReportStatusRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 通報ステータス更新レスポンス
type UpdateReportStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 更新が成功したかどうか
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReportStatusResponse) Reset() {
	*x = UpdateReportStatusResponse{}
	mi := &file_report_v1_report_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReportStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReportStatusResponse) ProtoMessage() {}

func (x *UpdateReportStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_report_v1_report_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReportStatusResponse.ProtoReflect.Descriptor instead.
func (*UpdateReportStatusResponse) Descriptor() ([]byte, []int) {
	return file_report_v1_report_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateReportStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_report_v1_report_proto protoreflect.FileDescriptor

const file_report_v1_report_proto_rawDesc = "" +
	"\n" +
	"\x16report/v1/report.proto\x12\treport.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x12user/v1/user.proto\"\xc0\x03\n" +
	"\x06Report\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12(\n" +
	"\x10reporter_user_id\x18\x02 \x01(\tR\x0ereporterUserId\x12(\n" +
	"\x10reported_user_id\x18\x03 \x01(\tR\x0ereportedUserId\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\x12\x18\n" +
	"\adetails\x18\x05 \x01(\tR\adetails\x12\x16\n" +
	"\x06status\x18\x06 \x01(\tR\x06status\x12\x1f\n" +
	"\vtarget_type\x18\a \x01(\tR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\b \x01(\tR\btargetId\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12)\n" +
	"\breporter\x18\v \x01(\v2\r.user.v1.UserR\breporter\x12)\n" +
	"\breported\x18\f \x01(\v2\r.user.v1.UserR\breported\"\xd9\x01\n" +
	"\x13CreateReportRequest\x12(\n" +
	"\x10reporter_user_id\x18\x01 \x01(\tR\x0ereporterUserId\x12(\n" +
	"\x10reported_user_id\x18\x02 \x01(\tR\x0ereportedUserId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12\x18\n" +
	"\adetails\x18\x04 \x01(\tR\adetails\x12\x1f\n" +
	"\vtarget_type\x18\x05 \x01(\tR\n" +
	"targetType\x12\x1b\n" +
	"\ttarget_id\x18\x06 \x01(\tR\btargetId\"&\n" +
	"\x14CreateReportResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\"\n" +
	"\x10GetReportRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\">\n" +
	"\x11GetReportResponse\x12)\n" +
	"\x06report\x18\x01 \x01(\v2\x11.report.v1.ReportR\x06report\"\xab\x02\n" +
	"\x12ListReportsRequest\x12-\n" +
	"\x10reporter_user_id\x18\x01 \x01(\tH\x00R\x0ereporterUserId\x88\x01\x01\x12-\n" +
	"\x10reported_user_id\x18\x02 \x01(\tH\x01R\x0ereportedUserId\x88\x01\x01\x12\x1b\n" +
	"\x06status\x18\x03 \x01(\tH\x02R\x06status\x88\x01\x01\x12$\n" +
	"\vtarget_type\x18\x04 \x01(\tH\x03R\n" +
	"targetType\x88\x01\x01\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSizeB\x13\n" +
	"\x11_reporter_user_idB\x13\n" +
	"\x11_reported_user_idB\t\n" +
	"\a_statusB\x0e\n" +
	"\f_target_type\"\x94\x01\n" +
	"\x13ListReportsResponse\x12+\n" +
	"\areports\x18\x01 \x03(\v2\x11.report.v1.ReportR\areports\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"C\n" +
	"\x19UpdateReportStatusRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"6\n" +
	"\x1aUpdateReportStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\xe1\x02\n" +
	"\rReportService\x12Q\n" +
	"\fCreateReport\x12\x1e.report.v1.CreateReportRequest\x1a\x1f.report.v1.CreateReportResponse\"\x00\x12H\n" +
	"\tGetReport\x12\x1b.report.v1.GetReportRequest\x1a\x1c.report.v1.GetReportResponse\"\x00\x12N\n" +
	"\vListReports\x12\x1d.report.v1.ListReportsRequest\x1a\x1e.report.v1.ListReportsResponse\"\x00\x12c\n" +
	"\x12UpdateReportStatus\x12$.report.v1.UpdateReportStatusRequest\x1a%.report.v1.UpdateReportStatusResponse\"\x00B\x91\x01\n" +
	"\rcom.report.v1B\vReportProtoP\x01Z.github.com/AI1411/m_app/gen/report/v1;reportv1\xa2\x02\x03RXX\xaa\x02\tReport.V1\xca\x02\tReport\\V1\xe2\x02\x15Report\\V1\\GPBMetadata\xea\x02\n" +
	"Report::V1b\x06proto3"

var (
	file_report_v1_report_proto_rawDescOnce sync.Once
	file_report_v1_report_proto_rawDescData []byte
)

func file_report_v1_report_proto_rawDescGZIP() []byte {
	file_report_v1_report_proto_rawDescOnce.Do(func() {
		file_report_v1_report_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_report_v1_report_proto_rawDesc), len(file_report_v1_report_proto_rawDesc)))
	})
	return file_report_v1_report_proto_rawDescData
}

var file_report_v1_report_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_report_v1_report_proto_goTypes = []any{
	(*Report)(nil),                     // 0: report.v1.Report
	(*CreateReportRequest)(nil),        // 1: report.v1.CreateReportRequest
	(*CreateReportResponse)(nil),       // 2: report.v1.CreateReportResponse
	(*GetReportRequest)(nil),           // 3: report.v1.GetReportRequest
	(*GetReportResponse)(nil),          // 4: report.v1.GetReportResponse
	(*ListReportsRequest)(nil),         // 5: report.v1.ListReportsRequest
	(*ListReportsResponse)(nil),        // 6: report.v1.ListReportsResponse
	(*UpdateReportStatusRequest)(nil),  // 7: report.v1.UpdateReportStatusRequest
	(*UpdateReportStatusResponse)(nil), // 8: report.v1.UpdateReportStatusResponse
	(*timestamppb.Timestamp)(nil),      // 9: google.protobuf.Timestamp
	(*v1.User)(nil),                    // 10: user.v1.User
}
var file_report_v1_report_proto_depIdxs = []int32{
	9,  // 0: report.v1.Report.created_at:type_name -> google.protobuf.Timestamp
	9,  // 1: report.v1.Report.updated_at:type_name -> google.protobuf.Timestamp
	10, // 2: report.v1.Report.reporter:type_name -> user.v1.User
	10, // 3: report.v1.Report.reported:type_name -> user.v1.User
	0,  // 4: report.v1.GetReportResponse.report:type_name -> report.v1.Report
	0,  // 5: report.v1.ListReportsResponse.reports:type_name -> report.v1.Report
	1,  // 6: report.v1.ReportService.CreateReport:input_type -> report.v1.CreateReportRequest
	3,  // 7: report.v1.ReportService.GetReport:input_type -> report.v1.GetReportRequest
	5,  // 8: report.v1.ReportService.ListReports:input_type -> report.v1.ListReportsRequest
	7,  // 9: report.v1.ReportService.UpdateReportStatus:input_type -> report.v1.UpdateReportStatusRequest
	2,  // 10: report.v1.ReportService.CreateReport:output_type -> report.v1.CreateReportResponse
	4,  // 11: report.v1.ReportService.GetReport:output_type -> report.v1.GetReportResponse
	6,  // 12: report.v1.ReportService.ListReports:output_type -> report.v1.ListReportsResponse
	8,  // 13: report.v1.ReportService.UpdateReportStatus:output_type -> report.v1.UpdateReportStatusResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_report_v1_report_proto_init() }
func file_report_v1_report_proto_init() {
	if File_report_v1_report_proto != nil {
		return
	}
	file_report_v1_report_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_report_v1_report_proto_rawDesc), len(file_report_v1_report_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_report_v1_report_proto_goTypes,
		DependencyIndexes: file_report_v1_report_proto_depIdxs,
		MessageInfos:      file_report_v1_report_proto_msgTypes,
	}.Build()
	File_report_v1_report_proto = out.File
	file_report_v1_report_proto_goTypes = nil
	file_report_v1_report_proto_depIdxs = nil
}
